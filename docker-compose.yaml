version: '3.8'

services:

  #nginx
  server:
    image: 'nginx:stable-alpine'
    container_name: nginx_fileManager
    ports:
      - '8000:80'
    volumes:
      - ./:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php

  #node
  npm:
    image: node:14
    container_name: node_cli

  #php
  php:
    build:
      context: docker-config
      dockerfile: php.dockerfile
    container_name: php_fileManager
    volumes:
      - ./:/var/www/html

  #composer
  composer:
    build:
      context: docker-config
      dockerfile: composer.dockerfile
    container_name: composer_cli
    volumes:
      - ./:/var/www/html

  #symfony
  symfony:
    build:
      context: docker-config
      dockerfile: symfony.dockerfile
    container_name: symfony_cli
    volumes:
      - ./:/var/www/html


  #mysql
  mysql:
    image: mysql:8.0
    container_name: mysql_fileManager
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_SYMFONY}
      MYSQL_USER: ${MYSQL_USER_SYMFONY}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD_SYMFONY}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_SYMFONY}
    volumes:
      - ./docker-config/provision/mysql/init/:/docker-entrypoint-initdb.d
      - ./data/mysql/:/var/lib/mysql


  #GUI pour base de donn√©e
  #phpmyadmin
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin_fileManager
    ports:
      - '8080:80'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_SYMFONY}
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
    depends_on:
      - mysql